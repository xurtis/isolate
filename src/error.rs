//! Errors generated by isolate.
error_chain!{
    // Wrappers for other error_chains.
    links {
    }

    // Wrappers for other errors.
    foreign_links {
		Io(::std::io::Error);
    }

    // Internally defined errors.
    errors {
		// A stack allocation via mmap failed
		StackAllocation(err: ::errno::Errno) {
			description("Could not allocate stack")
			display("StackAllocation({})", err)
		}

		// A clone failed.
		Clone(err: ::errno::Errno) {
			description("Could not create thread clone")
			display("Clone({})", err)
		}

		// Failed to wait on a child.
		ChildWait(err: ::errno::Errno) {
			description("Error when waiting on a child")
			display("ChildWait({})", err)
		}

		// Failed to continue child process after config.
		ChildContinue(err: ::errno::Errno) {
			description("Error continuing child after config")
			display("ChildContinue({})", err)
		}
    }
}

/// Wrap a syscall error in a known error.
macro_rules! errno {
	($kind:ident) => (
		ErrorKind::$kind(errno()).into()
	)
}
